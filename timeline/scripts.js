document.addEventListener("DOMContentLoaded", () => {
    const eventsData = {
        "2012": [
            { type: "catastrophe", text: "Октябрь: Группа сталкеров уничтожает Черное Сердце и О-Сознание, провоцируя энергетический выброс." },
            { type: "catastrophe", text: "Декабрь: Первичные очаги кристаллических мутаций фиксируются в Чернобыле." }
        ],
        "2013": [
            { type: "political", text: "Февраль: ООН созывает первую экстренную сессию." },
            { type: "scientific", text: "Апрель: Начинаются первые исследования кристаллов в лабораториях НАТО." },
            { type: "catastrophe", text: "Июнь: Кристаллы достигают территории Польши, Германии и Балтийских стран." }
        ],
        "2014": [
            { type: "political", text: "Январь: Строительство первых купольных городов." },
            { type: "political", text: "Июль: Первые протесты против военного использования кристаллов." }
        ],
        "2015": [
            { type: "political", text: "Январь: Образование культов 'Следующий Шаг' и 'Дети Кристалла'." },
            { type: "political", text: "Июнь: БРИКС активизирует ядерные программы, чтобы противостоять угрозам." }
        ],
        "2016": [
            { type: "political", text: "Январь: Первые локальные конфликты между НАТО и силами 'Следующего Шага'." },
            { type: "scientific", text: "Июнь: БРИКС разрабатывает суперсолдат с использованием энергии кристаллов." }
        ],
        "2017": [
            { type: "scientific", text: "Январь: Культ 'Дети Кристалла' впервые применяет пси-оружие." },
            { type: "political", text: "Июнь: Массовые протесты против культистов и вмешательства НАТО." }
        ],
        "2018": [
            { type: "scientific", text: "Февраль: 'Следующий Шаг' запускает проект 'Эволюция', создав сеть лабораторий для биомодификаций." },
            { type: "political", text: "Март: ООН запрещает эксперименты с кристаллами, но НАТО продолжает тайные разработки." },
            { type: "catastrophe", text: "Июнь: 'Дети Кристалла' основывают священное место в Восточной Сибири, фиксируются агрессивные мутации." },
            { type: "scientific", text: "Октябрь: Россия строит исследовательский центр 'Кварц' для изучения энергии кристаллов." }
        ],
        "2019": [
            { type: "political", text: "Январь: Первая война между НАТО и 'Следующим Шагом' за Венгрию и Румынию." },
            { type: "political", text: "Май: БРИКС заключает договор о ненападении с 'Детьми Кристалла', вызвав кризис в ООН." },
            { type: "catastrophe", text: "Август: В Южной Америке фиксируются мутации, уничтожающие инфраструктуру." },
            { type: "scientific", text: "Ноябрь: НАТО активирует проект 'Солярис' для очистки зараженных территорий." }
        ],
        "2020": [
            { type: "scientific", text: "Февраль: 'Следующий Шаг' создает армию кристаллизованных солдат для рейдов в Европу." },
            { type: "political", text: "Июль: Бразилия и Южная Африка создают 'Коалицию выживших', независимую от НАТО и БРИКС." },
            { type: "catastrophe", text: "Октябрь: Ядерный взрыв уничтожает семью 'Детей Кристалла', что приводит к конфликту с Россией." }
        ],
        "2021": [
            { type: "political", text: "Март: Появление нейтральных зон в Восточной Европе под контролем ООН и 'Следующего Шага'." },
            { type: "political", text: "Июнь: 'Дети Кристалла' объявляют Восточную Сибирь свободной от внешних фракций." },
            { type: "scientific", text: "Сентябрь: НАТО запускает проект 'Антагонист' для разрушения структуры кристаллов." },
            { type: "scientific", text: "Декабрь: Первое применение сверхоружия против 'Следующего Шага'." }
        ],
        "2022": [
            { type: "political", text: "Январь: США вводят эмбарго на торговлю с БРИКС." },
            { type: "political", text: "Апрель: 'Следующий Шаг' вербует группы в Южной Америке, провоцируя насилие." },
            { type: "political", text: "Октябрь: На Ближнем Востоке появляется фракция 'Ковчег', стремящаяся к миру без кристаллов." }
        ],
        "2023": [
            { type: "scientific", text: "Июнь: ООН утверждает 'Глобальный протокол адаптации' для использования энергии кристаллов." },
            { type: "catastrophe", text: "Сентябрь: 'Дети Кристалла' атакуют Северную Европу, уничтожая объекты НАТО." },
            { type: "scientific", text: "Декабрь: БРИКС завершает строительство центра 'Титановая Река'." }
        ],
        "2024": [
            { type: "catastrophe", text: "Март: Мутации в Южной Африке создают автономные зоны природы." },
            { type: "scientific", text: "Август: 'Следующий Шаг' разрабатывает технологии телепортации через энергию кристаллов." },
            { type: "political", text: "Ноябрь: БРИКС запускает проект 'Интеграция', вызывая массовые протесты." }
        ],
        "2025": [
            { type: "political", text: "Февраль: ООН созывает 'Конгресс человечества' для управления кристаллами." },
            { type: "political", text: "Июль: Переговоры между 'Следующим Шагом' и НАТО о мирном использовании кристаллов." },
            { type: "catastrophe", text: "Октябрь: 'Дети Кристалла' массово переселяются в Восточную Европу, вызывая гуманитарный кризис." }
        ]
    };    

    const timelineItems = document.querySelectorAll(".timeline .year");
    const eventsContainer = document.getElementById("events-container");
    const filter = document.getElementById("event-filter");

    // Функция отображения событий по году
    function displayEvents(year) {
        const events = eventsData[year] || [];
        if (!events.length) {
            eventsContainer.innerHTML = "<h3>Событий за этот год нет.</h3>";
            return;
        }
        
        const filteredType = filter.value;
        const filteredEvents = events.filter(event => filteredType === "all" || event.type === filteredType);

        if (!filteredEvents.length) {
            eventsContainer.innerHTML = "<h3>События данного типа отсутствуют.</h3>";
            return;
        }

        eventsContainer.innerHTML = filteredEvents.map(event => `
            <div class="event ${event.type}">
                <p>${event.text}</p>
            </div>
        `).join("");
    }

    // Переключение активного года
    timelineItems.forEach(item => {
        item.addEventListener("click", () => {
            timelineItems.forEach(year => year.classList.remove("active"));
            item.classList.add("active");
            displayEvents(item.dataset.year);
        });
    });

    // Фильтрация событий
    filter.addEventListener("change", () => {
        const activeYear = document.querySelector(".timeline .year.active");
        if (activeYear) {
            displayEvents(activeYear.dataset.year);
        }
    });
});
